import { BufferGeometry, InstancedMesh } from "three";
import { Material } from "three/src/materials/Material";
import { IFragmentGeometry, IFragmentMesh } from "./base-types";
import { Fragment } from "./fragment";
export declare class FragmentMesh extends InstancedMesh implements IFragmentMesh {
    material: Material[];
    geometry: IFragmentGeometry;
    elementCount: number;
    fragment: Fragment;
    private exportOptions;
    private exporter;
    constructor(geometry: BufferGeometry, material: Material | Material[], count: number, fragment: Fragment);
    exportData(): {
        position: Float32Array;
        normal: Float32Array;
        index: number[];
        blockID: number[];
        groups: number[];
        materials: number[];
        matrices: number[];
        colors: number[];
    };
    export(): Promise<any>;
    private newFragmentGeometry;
    private static initializeGroups;
    private static newMaterialArray;
}
