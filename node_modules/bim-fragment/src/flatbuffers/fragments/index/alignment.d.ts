import * as flatbuffers from 'flatbuffers';
export declare class Alignment {
    bb: flatbuffers.ByteBuffer | null;
    bb_pos: number;
    __init(i: number, bb: flatbuffers.ByteBuffer): Alignment;
    static getRootAsAlignment(bb: flatbuffers.ByteBuffer, obj?: Alignment): Alignment;
    static getSizePrefixedRootAsAlignment(bb: flatbuffers.ByteBuffer, obj?: Alignment): Alignment;
    position(index: number): number | null;
    positionLength(): number;
    positionArray(): Float32Array | null;
    curve(index: number): number | null;
    curveLength(): number;
    curveArray(): Int32Array | null;
    segment(index: number): number | null;
    segmentLength(): number;
    segmentArray(): Int32Array | null;
    static startAlignment(builder: flatbuffers.Builder): void;
    static addPosition(builder: flatbuffers.Builder, positionOffset: flatbuffers.Offset): void;
    static createPositionVector(builder: flatbuffers.Builder, data: number[] | Float32Array): flatbuffers.Offset;
    /**
     * @deprecated This Uint8Array overload will be removed in the future.
     */
    static createPositionVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
    static startPositionVector(builder: flatbuffers.Builder, numElems: number): void;
    static addCurve(builder: flatbuffers.Builder, curveOffset: flatbuffers.Offset): void;
    static createCurveVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset;
    /**
     * @deprecated This Uint8Array overload will be removed in the future.
     */
    static createCurveVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
    static startCurveVector(builder: flatbuffers.Builder, numElems: number): void;
    static addSegment(builder: flatbuffers.Builder, segmentOffset: flatbuffers.Offset): void;
    static createSegmentVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset;
    /**
     * @deprecated This Uint8Array overload will be removed in the future.
     */
    static createSegmentVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset;
    static startSegmentVector(builder: flatbuffers.Builder, numElems: number): void;
    static endAlignment(builder: flatbuffers.Builder): flatbuffers.Offset;
    static createAlignment(builder: flatbuffers.Builder, positionOffset: flatbuffers.Offset, curveOffset: flatbuffers.Offset, segmentOffset: flatbuffers.Offset): flatbuffers.Offset;
}
