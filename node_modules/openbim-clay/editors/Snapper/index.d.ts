import * as THREE from "three";
import { Lines, Vertices } from "../../primitives";
import { Event } from "../../utils/event";
export type FoundItem = {
    id: number;
    item: Vertices | Lines;
    coordinates: number[];
};
export declare class Snapper {
    vertices: Vertices[];
    lines: Lines[];
    snap: Event<FoundItem>;
    mode: "LINE" | "VERTEX" | "ALL";
    private _caster;
    private _helper;
    private _helperLinesIDs;
    private _helperPointsIDs;
    private _midPoint;
    private _helperLinesTimeout;
    private _lastSelectedLine;
    private readonly _vertexIcon;
    private _scene;
    set vertexThreshold(threshold: number);
    set lineThreshold(threshold: number);
    constructor(scene: THREE.Scene);
    find(): void;
    removeHelpers(): void;
    private previewSnap;
    private updateLastSelection;
    private updateMidPoint;
    private updateHelperLines;
    private createHelperLines;
    private findHelperLineIntersections;
    private getFoundItem;
    private raycastMeshes;
    private getSnapCoordinates;
}
