import * as THREE from "three";
import { Selector } from "../../utils";
export declare abstract class Primitive {
    /** Physical object with a geometry and one or many materials that can be placed in the scene. */
    abstract mesh: {
        geometry: THREE.BufferGeometry;
        material: THREE.Material | THREE.Material[];
    };
    /**
     * All the selected items within this primitive.
     */
    selected: Selector;
    protected _baseColor: THREE.Color;
    protected _selectColor: THREE.Color;
    /**
     * The list of ids of the {@link list} of items.
     */
    get ids(): number[];
    /**
     * The color of all the points.
     */
    get baseColor(): THREE.Color;
    /**
     * The color of all the points.
     */
    set baseColor(color: THREE.Color);
    /**
     * The color of all the selected points.
     */
    get selectColor(): THREE.Color;
    /**
     * The color of all the selected points.
     */
    set selectColor(color: THREE.Color);
    protected list: {
        [id: number]: {
            id: number;
            [key: string]: any;
        };
    };
    protected get _positionBuffer(): THREE.BufferAttribute;
    protected get _colorBuffer(): THREE.BufferAttribute;
    protected get _normalBuffer(): THREE.BufferAttribute;
    protected get _attributes(): THREE.BufferAttribute[];
}
