import * as THREE from "three";
import { Primitive, Extrusions, Lines } from "../../primitives";
export declare class Slabs extends Primitive {
    /** {@link Primitive.mesh } */
    mesh: THREE.Mesh;
    extrusions: Extrusions;
    lines: Lines;
    private _nextIndex;
    private _nextPolylineIndex;
    private _extrusionSlabMap;
    list: {
        [slabID: number]: {
            id: number;
            polylines: Set<number>;
            direction: number;
            extrusion: number | null;
        };
    };
    polylines: {
        [id: number]: {
            id: number;
            lines: Set<number>;
        };
    };
    constructor();
    /**
     * Given a face index, returns the slab ID that contains it.
     * @param faceIndex The index of the face whose slab ID to get.
     */
    getFromIndex(faceIndex: number): number | undefined;
    addPolyline(lines: number[]): number;
    setPolylines(id: number, lines: number[]): void;
    add(polylines: number[], height: number): void;
    remove(ids: Iterable<number>): void;
    regenerate(ids: number[]): void;
    removeExtrusion(id: number): void;
    private getOutline;
    private getPolylineSize;
    private createPoints;
    private getDirection;
}
